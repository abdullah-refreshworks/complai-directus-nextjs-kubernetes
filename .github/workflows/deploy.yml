name: Build and Deploy to Azure Kubernetes Service

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_CONTAINER_REGISTRY: complaiacr.azurecr.io
  CONTAINER_NAME_FRONTEND: frontend
  CONTAINER_NAME_DIRECTUS: directus
  RESOURCE_GROUP: complai-directus-nextjs-kubernetes
  CLUSTER_NAME: complai-aks
  NAMESPACE: complai

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME_FRONTEND }}:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME_FRONTEND }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Directus image
      uses: docker/build-push-action@v5
      with:
        context: ./directus
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME_DIRECTUS }}:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME_DIRECTUS }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --overwrite-existing

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Deploy to AKS
      run: |
        # Update image tags in deployment files
        sed -i "s|complaiacr.azurecr.io/frontend:latest|${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME_FRONTEND }}:${{ github.sha }}|g" k8s/manifests/frontend-deployment.yaml
        sed -i "s|directus/directus:latest|${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME_DIRECTUS }}:${{ github.sha }}|g" k8s/manifests/directus-deployment.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f k8s/manifests/namespace.yaml
        kubectl apply -f k8s/manifests/configmap.yaml
        kubectl apply -f k8s/manifests/secret.yaml
        kubectl apply -f k8s/manifests/postgres-deployment.yaml
        
        # Wait for PostgreSQL to be ready
        kubectl wait --for=condition=available --timeout=300s deployment/postgres-deployment -n ${{ env.NAMESPACE }}
        
        # Apply Directus deployment
        kubectl apply -f k8s/manifests/directus-deployment.yaml
        
        # Wait for Directus to be ready
        kubectl wait --for=condition=available --timeout=300s deployment/directus-deployment -n ${{ env.NAMESPACE }}
        
        # Apply Frontend deployment
        kubectl apply -f k8s/manifests/frontend-deployment.yaml
        
        # Wait for Frontend to be ready
        kubectl wait --for=condition=available --timeout=300s deployment/frontend-deployment -n ${{ env.NAMESPACE }}
        
        # Apply Ingress
        kubectl apply -f k8s/manifests/ingress.yaml

    - name: Verify deployment
      run: |
        echo "Deployment Status:"
        kubectl get pods -n ${{ env.NAMESPACE }}
        kubectl get services -n ${{ env.NAMESPACE }}
        kubectl get ingress -n ${{ env.NAMESPACE }}
        
        echo "Application URLs:"
        echo "Directus CMS: https://directus.complai.com"
        echo "Next.js App: https://app.complai.com"
